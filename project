#include <chrono>
#include <random>
#include <iostream>
#include <ctime>
#include <bits/stdc++.h>
#include <cstdlib>

void program1()
{
	srand(time(NULL));
	const int n = 10;
	int a[n];
	for (int i = 0; i < n; i++)
	{
		a[i] = rand() % 10;
	}
	std::cout << "Starting array\n";
	for (int i = 0; i < n; i++)
	{
		std::cout << a[i] << " ";
	}
	std::cout << "\n";
	std::cout << "Indexes: \n";
	for (int i = 0; i < n; i++)
	{
		std::cout << i << " ";
	}
	std::cout << "\n";
	std::cout << "Indexes where a[i] = 0:\n";
	for (int i = 0; i < n; i++)
	{
		if (a[i] == 0)
		{
			std::cout << i << " ";
		}
		else
		{
			continue;
		}
	}
}

void program2()
{
	srand(time(NULL));
	const int n = 8;
	int a[n];
	for (int i = 0; i < n; i++)
	{
		a[i] = rand() % 10;
	}
	std::cout << "Starting array:\n";
	for (int i = 0; i < n; i++)
	{
		std::cout << a[i] << " ";
	}
	std::cout << "\n";
	std::cout << "Indexes: \n";
	for (int i = 0; i < n; i++)
	{
		std::cout << i << " ";
	}
	std::cout << "\n";
	std::cout << "Elements where a[i] < i:\n";
	for (int i = 0; i < n; i++)
	{
		if (a[i] < i)
		{
			std::cout << a[i] << " ";
		}
		else
		{
			std::cout << "  ";
		}
	}
}

void program3()
{
	srand(time(NULL));
	const int n = 8;
	int a[n];
	for (int i = 0; i < n; i++)
	{
		a[i] = rand() % 10;
	}
	std::cout << "Starting array\n";
	for (int i = 0; i < n; i++)
	{
		std::cout << a[i] << " ";
	}
	int min, max;
	min = a[0];
	max = a[0];
	std::cout << "\n";
	for (int i = 0; i < n; i++)
	{
		if (a[i] < min)
		{
			min = a[i];
		}
		else
		{
			continue;
		}
	}
	for (int i = 0; i < n; i++)
	{
		if (a[i] > max)
		{
			max = a[i];
		}
		else
		{
			continue;
		}
	}
	for (int i = 0; i < n; i++)
	{
		if (a[i] == min)
		{
			std::cout << "min = " << "a[" << i << "] = " << min << "\n";
			break;
		}
		else
		{
			continue;
		}
	}
	for (int i = n; i > 0; i--)
	{
		if (a[i] == max)
		{
			std::cout << "max = " << "a[" << i << "] = " << max << "\n";
			break;
		}
		else
		{
			continue;
		}
	}
}

void program4()
{
	srand(time(NULL));
	const int n = 7;
	int a[n];
	for (int i = 0; i < n; i++)
	{
		a[i] = rand() % 10;
	}
	std::cout << "Starting array\n";
	for (int i = 0; i < n; i++)
	{
		std::cout << a[i] << " ";
	}
	std::cout << "\n";
	if (n % 2 == 0)
	{
		int b = a[0];
		a[0] = a[n - 1];
		a[n - 1] = b;
		for (int i = 1; i < n - 1; i++)
		{
			if (i % 2 != 0)
			{
				int temp1;
				temp1 = a[i];
				a[i] = a[i + 1];
				a[i + 1] = temp1;
			}
		}
	}
	if (n % 2 != 0)
	{
		int c = a[0];
		a[0] = a[n - 1];
		a[n - 1] = c;
		for (int i = 1; i < n - 2; i++)
		{
			if (i % 2 != 0)
			{
				int temp2;
				temp2 = a[i];
				a[i] = a[i + 1];
				a[i + 1] = temp2;
			}
		}
	}
	for (int i = 0; i < n; i++)
	{
		std::cout << a[i] << " ";
	}
}

void program5()
{
	srand(time(NULL));
	const int n = 7;
	int a[n];
	for (int i = 0; i < n; i++)
	{
		a[i] = rand() % 10;
	}
	std::cout << "Starting array\n";
	for (int i = 0; i < n; i++)
	{
		std::cout << a[i] << " ";
	}
	std::cout << "\n";
	int sum = 0;
	for (int i = 0; i < n; i++)
	{
		sum += a[i];
	}
	double arsum = sum / (double)n;
	std::cout << "Average = " << arsum << "\n";
	std::cout << "Output: \n";
	for (int i = 0; i < n; i++)
	{
		if (a[i] < arsum)
		{
			std::cout << a[i] << " ";
		}
		else
		{
			std::cout << "  ";
		}
	}
}

void program6()
{
	srand(time(NULL));
	const int n = 10;
	int a[n];
	for (int i = 0; i < n; i++)
	{
		a[i] = rand() % 10 - 5;
	}
	std::cout << "Starting array\n";
	for (int i = 0; i < n; i++)
	{
		std::cout << a[i] << " ";
	}
	std::cout << "\n";

	for (int i = 0; i < n; ++i)
	{
		if (a[i] < 0)
		{
			for (int j = i; j > 0 && a[j-1] >= 0; --j)
			{
				int c = a[j];
				a[j] = a[j - 1];
				a[j - 1] = c;
			}
		}
	}
	for (int i = n - 1; i >= 0; --i)
	{
		if (a[i] > 0)
		{
			for (int j = i; j < n - 1 && a[j + 1] <= 0; ++j)
			{
				int b = a[j];
				a[j] = a[j + 1];
				a[j + 1] = b;
			}
		}
	}
	std::cout << "Sorted array: ";
	for (int i = 0; i < n; i++)
	{
		std::cout << a[i] << " ";
	}
}

void program7()
{
	srand(time(NULL));
	const int n = 10;
	int a[n];
	for (int i = 0; i < n; i++)
	{
		a[i] = rand() % 10;
	}
	std::cout << "Starting array\n";
	for (int i = 0; i < n; i++)
	{
		std::cout << a[i] << " ";
	}
	std::cout << "\n";
	int count = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] != 0)
		{
			a[count++] = a[i];
		}
	}
	for (int i = count; i < n; i++)
	{
		a[i] = 0;
	}
	std::cout << "New array: \n";
	for (int i = 0; i < n; i++)
	{
		if (a[i] != 0)
		{
			std::cout << a[i] << " ";
		}
	}
}

void program8() 
{
    srand(time(NULL));
    const long int n = 100000;

    int* arr1 = new int[n];
    int* arr2 = new int[n];
    int* arr3 = new int[n];
    for (int i = 0; i < n; ++i) 
    {
        int tmp = rand() % 10 - 5;
        arr1[i] = tmp;
        arr2[i] = tmp;
        arr3[i] = tmp;
    }

    auto a1 = std::chrono::high_resolution_clock::now();
    std::sort(arr1, arr1 + n);
    auto a2 = std::chrono::high_resolution_clock::now();

    std::cout << "build-in sort time: " << std::chrono::duration<double, std::milli>(a2 - a1).count() << " ms\n";

    auto b1 = std::chrono::high_resolution_clock::now();
    for (int i = 0; i < n - 1; i++)
        for (int j = 0; j < n - i - 1; j++)
            if (arr2[j] > arr2[j + 1])
                std::swap(arr2[j], arr2[j + 1]);

    auto b2 = std::chrono::high_resolution_clock::now();

    std::cout << "bubble sort time: " << std::chrono::duration<double, std::milli>(b2 - b1).count() << " ms\n";

    auto c1 = std::chrono::high_resolution_clock::now();

    int i, j, min_idx;
    for (i = 0; i < n-1; i++)
    {
        min_idx = i;
        for (j = i+1; j < n; j++)
            if (arr3[j] < arr3[min_idx])
                min_idx = j;

        std::swap(arr3[min_idx], arr3[i]);
    }
    auto c2 = std::chrono::high_resolution_clock::now();

    std::cout << "selection sort time: " << std::chrono::duration<double, std::milli>(c2 - c1).count() << " ms";
}

int main()
{
    bool answer;

    //   program1();
    //   program2();
    //   program3();
	//   program4();
	//   program5();
	//   program6();
	//   program7();
	//   program8();
	//   program9();
	//   program10();

    std::cout << "\nOne more? (1 - yes, 0 - no): ";
    std::cin >> answer;
    if (std::cin.fail()) {
        std::cout << "\nInput error.";
        std::cin.clear();
        std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
        return 0;
    }

    if (answer)
    {
        main();
    }
    return 0;
}
